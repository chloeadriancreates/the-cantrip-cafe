@use "./variables";
@use "./functions";

@mixin flex($direction: row, $justify: center, $align: center) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}

@mixin assistiveTechOnly() {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
}

@mixin transition($property: all) {
    transition: $property 0.3s ease;
}

@mixin button($ratio: 1) {
    @include transition;
    background: none;
    font-family: variables.$font;
    font-size: calc(functions.pixelsToRem(variables.$body) * $ratio);
    padding: calc(functions.pixelsToRem(15) * $ratio) calc(functions.pixelsToRem(30) * $ratio);
    border: variables.$border;
    border-radius: 500px;
    cursor: pointer;

    &:hover,
    &:focus {
        background-color: variables.$brownie;
        color: variables.$cream;
        border: solid 2px variables.$cream;
        outline: solid calc(functions.pixelsToRem(10) * $ratio) variables.$caramel;
    }

    &[aria-pressed="true"] {
        background-color: variables.$brownie;
        color: variables.$cream;
    }
}

@mixin arch($color: variables.$cream) {
    width: 100%;
    height: 100%;
    border-radius: 500px 500px 0 0;
    background-color: $color;
    border: solid 2px variables.$cream;
    padding: functions.pixelsToRem(18);
}

@mixin border($color: variables.$cream) {
    height: 100%;
    background-color: $color;
    border: solid 2px variables.$cream;
}

@mixin link($color: variables.$cream) {
    @include flex(column, center, center);
    font-size: functions.pixelsToRem(variables.$body);
    color: $color;

    &::after {
        @include transition;
        content: "";
        width: 0%;
        transform-origin: center;
        height: functions.pixelsToRem(2);
        background: $color;
        border-radius: 500px;
        margin-top: functions.pixelsToRem(2);
    }

    &:hover::after,
    &:focus::after {
        width: 100%;
    }
}